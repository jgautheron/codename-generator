machine:
  environment:
    GOPATH: "/home/ubuntu/.go_workspace"
    ORG_PATH: "github.com/jgautheron"
    REPO_PATH: "${ORG_PATH}/codename-generator"
    PATH: "${PATH}:${GOPATH}/bin"

dependencies:
  override:
    - rm -rf ${GOPATH}/src/${REPO_PATH}
    - mkdir -p ${GOPATH}/src/${ORG_PATH}
    - cp -r ../codename-generator ${GOPATH}/src/${ORG_PATH}
    - go get github.com/kr/godep
    - cd ${GOPATH}/src/${REPO_PATH} && godep restore

test:
  pre:
    - go get github.com/axw/gocov/gocov
    - go get github.com/mattn/goveralls
    - if ! go get code.google.com/p/go.tools/cmd/cover; then go get golang.org/x/tools/cmd/cover; fi
  override:
    - godep go build:
        pwd: ../.go_workspace/src/${REPO_PATH}
    - godep go test -v -cover -race -coverprofile=/home/ubuntu/coverage.out:
        pwd: ../.go_workspace/src/${REPO_PATH}
    - FORMATTED="$(go fmt ./...)" && \
      ( ( [[ -n $FORMATTED ]] && echo "gofmt failed on the following files:" && echo -ne $FORMATTED && exit 1) || (( [[ -z $FORMATTED ]] && echo "gofmt passed")  ) )
    - VETTED="$(go vet ./...)" && \
      ( ( [[ -n $VETTED ]] && echo "govet failed on the following files:" && echo -ne $VETTED && exit 1) || (( [[ -z $VETTED ]] && echo "govet passed")  ) )
  post:
    - $GOPATH/bin/goveralls -coverprofile=/home/ubuntu/coverage.out -service=circle-ci -repotoken=$COVERALLS_REPO_TOKEN